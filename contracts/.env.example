# ============================================================
# CREDO PROTOCOL - SMART CONTRACTS ENVIRONMENT VARIABLES
# ============================================================
# This file configures contract deployment and testing.
# Copy this file to .env and fill in your values.
# ============================================================

# ------------------------------------------------------------
# DEPLOYER CONFIGURATION (Required for deployment)
# ------------------------------------------------------------
# Private key for the wallet that will deploy contracts
# This wallet needs MOCA tokens for gas fees
# 
# Get test MOCA from: https://devnet-scan.mocachain.org/faucet
# 
# ⚠️ NEVER commit your real private key! Use a test wallet only.
# ⚠️ For production, use environment variables or secure key management
DEPLOYER_PRIVATE_KEY=your_private_key_here

# ------------------------------------------------------------
# MOCK ISSUER PRIVATE KEYS (For Testing)
# ------------------------------------------------------------
# These keys are used by the backend to sign credentials
# They must match the keys in backend/.env
# 
# You can:
# 1. Generate 3 new wallets and paste their private keys here
# 2. Use the same keys as the deployed system (see backend/.env)
# 3. Run: cd scripts && node generate-wallets.js (if script exists)

# Mock Exchange Issuer (CEX History credentials)
# Default deployed system uses this key (derives to 0x499CEB20A05A1eF76D6805f293ea9fD570d6A431)
MOCK_EXCHANGE_PRIVATE_KEY=0x6c08716ba489d2f83e5d3f14a149d01996baf4d4086fdc06b57e0a49678b6bec

# Mock Employer Issuer (Employment credentials)
# Default deployed system uses this key (derives to 0x22a052d047E8EDC3A75010588B034d66db9bBCE1)
MOCK_EMPLOYER_PRIVATE_KEY=0x7552b6b8b30aa2bb432d231895eab2ddf4eff143f5bf3ff4a1360336f7f4c7c1

# Mock Bank Issuer (Stable Balance credentials)
# Default deployed system uses this key (derives to 0x3cb42f88131DBe9D0b53E0c945c6e1F76Ea0220E)
MOCK_BANK_PRIVATE_KEY=0x7fdb4a526e0386ffbdf8a77b6de9fef52d16d10180a310f3a430c4c510691e21

# ------------------------------------------------------------
# DEPLOYED CONTRACT ADDRESSES (Reference)
# ------------------------------------------------------------
# Current deployed contracts on Moca Devnet (October 14, 2025):
# You can use these addresses or deploy your own

CREDIT_ORACLE_ADDRESS=0x82Adc3540672eA15C2B9fF9dFCf01BF8d81F2Cd2
LENDING_POOL_ADDRESS=0x72efF02BF767b79369ea749dd7d57c143A92Cf09
MOCK_USDC_ADDRESS=0x76FdD416C70a9b51071C1751088d6715dD60d864

# Issuer addresses (derived from the private keys above)
MOCK_EXCHANGE_ADDRESS=0x499CEB20A05A1eF76D6805f293ea9fD570d6A431
MOCK_EMPLOYER_ADDRESS=0x22a052d047E8EDC3A75010588B034d66db9bBCE1
MOCK_BANK_ADDRESS=0x3cb42f88131DBe9D0b53E0c945c6e1F76Ea0220E

# To deploy your own contracts instead:
# 1. Clear the addresses above (set them to empty)
# 2. Run: npm run deploy:devnet
# 3. Copy new addresses to .env.local in root directory

# ------------------------------------------------------------
# MOCA CHAIN CONFIGURATION
# ------------------------------------------------------------
# These values are for Moca Chain Devnet
# No changes needed for development

# Moca Chain Devnet RPC URL
MOCA_DEVNET_RPC=http://devnet-rpc.mocachain.org

# Alternative: Moca Chain Testnet RPC URL
# MOCA_TESTNET_RPC=http://testnet-rpc.mocachain.org

# ------------------------------------------------------------
# HARDHAT CONFIGURATION (Optional)
# ------------------------------------------------------------
# Enable gas reporting in tests (shows gas costs for each function)
REPORT_GAS=false

# Enable contract size reporting (useful for optimization)
# CONTRACT_SIZER=false

# Etherscan API key (for verification - not needed for Moca Chain)
# ETHERSCAN_API_KEY=

# ------------------------------------------------------------
# SETUP INSTRUCTIONS
# ------------------------------------------------------------
# 
# === OPTION 1: Use Existing Deployed Contracts ===
# 1. Copy this file: cp .env.example .env
# 2. Keep contract addresses commented out
# 3. No need to add private keys
# 4. Use the contracts already deployed on Moca Devnet
# 
# === OPTION 2: Deploy Your Own Contracts ===
# 1. Copy this file: cp .env.example .env
# 2. Get test MOCA: https://devnet-scan.mocachain.org/faucet
# 3. Replace 'your_private_key_here' with your wallet's private key
# 4. Generate 3 issuer wallets and add their private keys
# 5. Install dependencies: npm install
# 6. Compile contracts: npm run compile
# 7. Run tests: npm test
# 8. Deploy contracts: npm run deploy:devnet
# 9. Run register-issuers: npm run register-issuers
# 10. Copy new addresses to .env.local in root directory
# 
# === Testing Only (No Deployment) ===
# 1. Copy this file: cp .env.example .env
# 2. Run: npm test
# 3. No private keys or contract addresses needed
# ------------------------------------------------------------
